}
createSessionInstance(configuration = config)
View(config)
View(SessionInstance)
devtools::document()
config = ServerConfig()
#' Creates a server instance
#'
#' The function creates a new server instance on the global variable 'openeo.server'. The names for
#' this variable is reserved and should not be changed by any means. It will crash the system, since
#' many endpoints will be accessing and depending on the correctly set variable 'openeo.server'.
#'
#' @export
createSessionInstance = function(configuration = NULL) {
assign("SessionInstance", Session$new(configuration),envir=.GlobalEnv)
invisible(Session)
}
createSessionInstance(configuration = config)
View(SessionInstance)
remove(SessionInstance$startSession$createEndpoints)
View(SessionInstance)
devtools::document()
config = ServerConfig()
#' Creates a server instance
#'
#' The function creates a new server instance on the global variable 'openeo.server'. The names for
#' this variable is reserved and should not be changed by any means. It will crash the system, since
#' many endpoints will be accessing and depending on the correctly set variable 'openeo.server'.
#'
#' @export
createSessionInstance = function(configuration = NULL) {
assign("SessionInstance", Session$new(configuration),envir=.GlobalEnv)
invisible(Session)
}
createSessionInstance(configuration = config)
SessionInstance$startSession()
devtools::load_all(".")
devtools::load_all(".")
config = ServerConfig()
#' Creates a server instance
#'
#' The function creates a new server instance on the global variable 'openeo.server'. The names for
#' this variable is reserved and should not be changed by any means. It will crash the system, since
#' many endpoints will be accessing and depending on the correctly set variable 'openeo.server'.
#'
#' @export
createSessionInstance = function(configuration = NULL) {
assign("SessionInstance", Session$new(configuration),envir=.GlobalEnv)
invisible(Session)
}
createSessionInstance(configuration = config)
SessionInstance$startSession()
#' Session
#'
#' This is the session class
#'
#' @field processes This field is also managed during runtime. Here all template processes are listed
#' @field data A list of products offered by the service which is managed at runtime.
#'
#' @importFrom R6 R6Class
#' @import plumber
#' @export
Session <- R6Class(
"Session",
public = list(
# attributes
processes = NULL,
data = NULL,
# functions
initialize = function(configuration = NULL) {
self$processes = list()
self$data = list()
private$config = configuration
},
getEndpoints = function() {
return(private$endpoints)
},
getConfig = function() {
return(private$config)
},
startSession = function(){
private$initRouter()
private$router$run(port=8000,host="127.0.0.1")
}
),
# private ----
private = list(
# attributes ====
endpoints = NULL,
router = NULL, # plumber class
config = NULL,
# functions
initRouter = function(){
private$router = Router$new()
}
)
)
#' Session
#'
#' This is the session class
#'
#' @field processes This field is also managed during runtime. Here all template processes are listed
#' @field data A list of products offered by the service which is managed at runtime.
#'
#' @importFrom R6 R6Class
#' @import plumber
#' @export
Session <- R6Class(
"Session",
public = list(
# attributes
processes = NULL,
data = NULL,
# functions
initialize = function(configuration = NULL) {
self$processes = list()
self$data = list()
private$config = configuration
},
getEndpoints = function() {
return(private$endpoints)
},
getConfig = function() {
return(private$config)
},
startSession = function(){
private$initRouter()
private$router$run(port=8000,host="127.0.0.1")
}
),
# private ----
private = list(
# attributes ====
endpoints = NULL,
router = NULL, # plumber class
config = NULL,
# functions
initRouter = function(){
private$router = Router$new()
}
)
)
#' Session
#'
#' This is the session class
#'
#' @field processes This field is also managed during runtime. Here all template processes are listed
#' @field data A list of products offered by the service which is managed at runtime.
#'
#' @importFrom R6 R6Class
#' @import plumber
#' @export
Session <- R6Class(
"Session",
public = list(
# attributes
processes = NULL,
data = NULL,
# functions
initialize = function(configuration = NULL) {
self$processes = list()
self$data = list()
private$config = configuration
},
getEndpoints = function() {
return(private$endpoints)
},
getConfig = function() {
return(private$config)
},
startSession = function(){
private$initRouter()
private$router$run(port=8000,host="127.0.0.1")
}
),
# private ----
private = list(
# attributes ====
endpoints = NULL,
router = NULL, # plumber class
config = NULL,
# functions
initRouter = function(){
private$router = Router$new()
}
)
)
devtools::document()
config = ServerConfig()
#' Creates a server instance
#'
#' The function creates a new server instance on the global variable 'openeo.server'. The names for
#' this variable is reserved and should not be changed by any means. It will crash the system, since
#' many endpoints will be accessing and depending on the correctly set variable 'openeo.server'.
#'
#' @export
createSessionInstance = function(configuration = NULL) {
assign("SessionInstance", Session$new(configuration),envir=.GlobalEnv)
invisible(Session)
}
createSessionInstance(configuration = config)
SessionInstance$startSession()
#' Session
#'
#' This is the session class
#'
#' @field processes This field is also managed during runtime. Here all template processes are listed
#' @field data A list of products offered by the service which is managed at runtime.
#'
#' @importFrom R6 R6Class
#' @import plumber
#' @export
Session <- R6Class(
"Session",
public = list(
# attributes
processes = NULL,
data = NULL,
# functions
initialize = function(configuration = NULL) {
self$processes = list()
self$data = list()
private$config = configuration
},
getEndpoints = function() {
return(private$endpoints)
},
getConfig = function() {
return(private$config)
},
startSession = function(){
private$initRouter()
private$router$run(port=8000,host="127.0.0.1")
}
),
# private ----
private = list(
# attributes ====
endpoints = NULL,
router = NULL, # plumber class
config = NULL,
# functions
initRouter = function(){
private$router = Router$new()
}
)
)
config = ServerConfig()
#' Creates a server instance
#'
#' The function creates a new server instance on the global variable 'openeo.server'. The names for
#' this variable is reserved and should not be changed by any means. It will crash the system, since
#' many endpoints will be accessing and depending on the correctly set variable 'openeo.server'.
#'
#' @export
createSessionInstance = function(configuration = NULL) {
assign("SessionInstance", Session$new(configuration),envir=.GlobalEnv)
invisible(Session)
}
createSessionInstance(configuration = config)
SessionInstance$startSession()
View(Session)
View(SessionInstance)
devtools::load_all(".")
library(openEo.gdalcubes)
View(Session)
config = ServerConfig()
#' Creates a server instance
#'
#' The function creates a new server instance on the global variable 'openeo.server'. The names for
#' this variable is reserved and should not be changed by any means. It will crash the system, since
#' many endpoints will be accessing and depending on the correctly set variable 'openeo.server'.
#'
#' @export
createSessionInstance = function(configuration = NULL) {
assign("SessionInstance", Session$new(configuration),envir=.GlobalEnv)
invisible(Session)
}
createSessionInstance(configuration = config)
SessionInstance$startSession()
devtools::document()
devtools::document()
config = ServerConfig()
#' Creates a server instance
#'
#' The function creates a new server instance on the global variable 'openeo.server'. The names for
#' this variable is reserved and should not be changed by any means. It will crash the system, since
#' many endpoints will be accessing and depending on the correctly set variable 'openeo.server'.
#'
#' @export
createSessionInstance = function(configuration = NULL) {
assign("Session", SessionInstance$new(configuration),envir=.GlobalEnv)
invisible(Session)
}
createSessionInstance(configuration = config)
View(Session)
Session$startSession()
devtools::document()
config = ServerConfig()
#' Creates a server instance
#'
#' The function creates a new server instance on the global variable 'openeo.server'. The names for
#' this variable is reserved and should not be changed by any means. It will crash the system, since
#' many endpoints will be accessing and depending on the correctly set variable 'openeo.server'.
#'
#' @export
createSessionInstance = function(configuration = NULL) {
assign("SessionInstance", Session$new(configuration),envir=.GlobalEnv)
invisible(Session)
}
createSessionInstance(configuration = config)
Session$startSession()
library(openEo.gdalcubes)
devtools::document()
config = ServerConfig()
#' Creates a server instance
#'
#' The function creates a new server instance on the global variable 'openeo.server'. The names for
#' this variable is reserved and should not be changed by any means. It will crash the system, since
#' many endpoints will be accessing and depending on the correctly set variable 'openeo.server'.
#'
#' @export
createSessionInstance = function(configuration = NULL) {
assign("SessionInstance", Session$new(configuration),envir=.GlobalEnv)
invisible(Session)
}
createSessionInstance(configuration = config)
Session$startSession()
SessionInstance$startSession()
devtools::document()
devtools::document()
config = ServerConfig()
#' Creates a server instance
#'
#' The function creates a new server instance on the global variable 'openeo.server'. The names for
#' this variable is reserved and should not be changed by any means. It will crash the system, since
#' many endpoints will be accessing and depending on the correctly set variable 'openeo.server'.
#'
#' @export
createSessionInstance = function(configuration = NULL) {
assign("SessionInstance", Session$new(configuration),envir=.GlobalEnv)
invisible(Session)
}
createSessionInstance(configuration = config)
SessionInstance$startSession()
roxygen2::roxygenise()
roxygen2::roxygenise()
devtools::document()
config = ServerConfig()
#' Creates a server instance
#'
#' The function creates a new server instance on the global variable 'openeo.server'. The names for
#' this variable is reserved and should not be changed by any means. It will crash the system, since
#' many endpoints will be accessing and depending on the correctly set variable 'openeo.server'.
#'
#' @export
createSessionInstance = function(configuration = NULL) {
assign("SessionInstance", Session$new(configuration),envir=.GlobalEnv)
invisible(Session)
}
createSessionInstance(configuration = config)
View(SessionInstance)
library(openEo.gdalcubes)
library(openEo.gdalcubes)
config = ServerConfig()
#' Creates a server instance
#'
#' The function creates a new server instance on the global variable 'openeo.server'. The names for
#' this variable is reserved and should not be changed by any means. It will crash the system, since
#' many endpoints will be accessing and depending on the correctly set variable 'openeo.server'.
#'
#' @export
createSessionInstance = function(configuration = NULL) {
assign("SessionInstance", Session$new(configuration),envir=.GlobalEnv)
invisible(Session)
}
createSessionInstance(configuration = config)
SessionInstance$startSession()
devtools::document(clean=TRUE)
roxygen2::roxygenise(clean=TRUE)
roxygen2::roxygenise(clean=TRUE)
config = ServerConfig()
#' Creates a server instance
#'
#' The function creates a new server instance on the global variable 'openeo.server'. The names for
#' this variable is reserved and should not be changed by any means. It will crash the system, since
#' many endpoints will be accessing and depending on the correctly set variable 'openeo.server'.
#'
#' @export
createSessionInstance = function(configuration = NULL) {
assign("SessionInstance", Session$new(configuration),envir=.GlobalEnv)
invisible(Session)
}
createSessionInstance(configuration = config)
View(SessionInstance)
devtools::document()
config = ServerConfig()
invisible(SessionInstance)
#' Session
#'
#' This is the session class
#'
#' @field processes This field is also managed during runtime. Here all template processes are listed
#' @field data A list of products offered by the service which is managed at runtime.
#'
#' @importFrom R6 R6Class
#' @import plumber
#' @export
Session <- R6Class(
"Session",
public = list(
# attributes
processes = NULL,
data = NULL,
# functions
initialize = function(configuration = NULL) {
self$processes = list()
self$data = list()
private$config = configuration
},
getEndpoints = function() {
return(private$endpoints)
},
getConfig = function() {
return(private$config)
},
startup = function(){
private$initRouter()
private$router$run(port=8000,host="127.0.0.1")
}
),
# private ----
private = list(
# attributes ====
endpoints = NULL,
router = NULL, # plumber class
config = NULL,
# functions
initRouter = function(){
private$router = Router$new()
}
)
)
#' Creates a server instance
#'
#' The function creates a new server instance on the global variable 'openeo.server'. The names for
#' this variable is reserved and should not be changed by any means. It will crash the system, since
#' many endpoints will be accessing and depending on the correctly set variable 'openeo.server'.
#'
#' @export
createSessionInstance = function(configuration = NULL) {
assign("SessionInstance", Session$new(configuration),envir=.GlobalEnv)
invisible(SessionInstance)
}
createSessionInstance(configuration = config)
View(SessionInstance)
config = ServerConfig()
#' Creates a server instance
#'
#' The function creates a new server instance on the global variable 'openeo.server'. The names for
#' this variable is reserved and should not be changed by any means. It will crash the system, since
#' many endpoints will be accessing and depending on the correctly set variable 'openeo.server'.
#'
#' @export
createSessionInstance = function(configuration = NULL) {
assign("SessionInstance", Session$new(configuration),envir=.GlobalEnv)
invisible(SessionInstance)
}
createSessionInstance(configuration = config)
View(SessionInstance)
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
?rm()
rm(list = ls())
devtools::document()
config = ServerConfig()
#' Creates a server instance
#'
#' The function creates a new server instance on the global variable 'openeo.server'. The names for
#' this variable is reserved and should not be changed by any means. It will crash the system, since
#' many endpoints will be accessing and depending on the correctly set variable 'openeo.server'.
#'
#' @export
createSessionInstance = function(configuration = NULL) {
assign("SessionInstance", Session$new(configuration),envir=.GlobalEnv)
invisible(SessionInstance)
}
createSessionInstance(configuration = config)
View(SessionInstance)
SessionInstance$startSession()
rm(list = ls())
library(openEo.gdalcubes)
config = ServerConfig()
#' Creates a server instance
#'
#' The function creates a new server instance on the global variable 'openeo.server'. The names for
#' this variable is reserved and should not be changed by any means. It will crash the system, since
#' many endpoints will be accessing and depending on the correctly set variable 'openeo.server'.
#'
#' @export
createSessionInstance = function(configuration = NULL) {
assign("SessionInstance", Session$new(configuration),envir=.GlobalEnv)
invisible(SessionInstance)
}
createSessionInstance(configuration = config)
SessionInstance$startSession()
View(config)
View(SessionInstance)
SessionInstance$startup()
